package com.tryharder.recursion;


import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

// Given a string, return all strings that can be generated by changing case of one or more letters in it.
//Input
//        {
//        "s": "a1z"
//        }
//
//Output
//        ["A1Z", "A1z", "a1Z", "a1z"]
//
//
//        Return strings in any order.
//
//        Constraints:
//
//        Input string may contain only: 'a'..'z', 'A'..'Z', '0'..'9'
//        1 <= length of the string <= 12


public class letterCasePermutation {

    static void helper(String s,int i,String slate)
    {

        if (i == s.length()) {
            System.out.println(slate);
        }
        else
        {
            if (Character.isDigit(s.charAt(i))) {
                helper(s, i + 1, slate + s.charAt(i));

            } else {
                helper(s,i+1,slate + Character.toLowerCase(s.charAt(i)));
                helper(s,i+1,slate + Character.toUpperCase(s.charAt(i)));

            }
        }
    }


    static void permutationHelper(String s , int index, char []slate,ArrayList<String> result)
    {
        if (index == s.length()) {
            result.add(new String(slate));
        }
        else
        {
            if (Character.isDigit(s.charAt(index))) {
                slate[index] = s.charAt(index);
                permutationHelper(s,index+1,slate,result);
            }
            else
            {
                slate[index]=Character.toUpperCase(s.charAt(index));
                permutationHelper(s,index+1,slate,result);
                slate[index]=Character.toLowerCase(s.charAt(index));
                permutationHelper(s,index+1,slate,result);

            }
        }
    }


    static void permutationHelper2(char[] s , int index)
    {
        if (index == s.length) {
            System.out.println(s);
        }
        else
        {
            if (Character.isDigit(s[index])){
                permutationHelper2(s,index+1);
            }
            else
            {
                s[index]=Character.toUpperCase(s[index]);
                permutationHelper2(s,index+1);
                s[index]=Character.toLowerCase(s[index]);
                permutationHelper2(s,index+1);

            }
        }
    }

    static ArrayList<String> letter_case_permutations(String s) {
        // Write your code here.

        ArrayList<String> result = new ArrayList<String>();
        permutationHelper(s,0,new char[s.length()],result);
        return result;
    }


    public static void main(String[] args) {
        String s = new String("a1b2");
//        helper(s, 0, "");

        ArrayList<String> result = letter_case_permutations(s);
        System.out.println(result.size());
        for(String input:result)
        {
            System.out.println(input);
        }

        System.out.println("labda function");
        result.stream().forEach((res)-> System.out.println(res));


        System.out.println("For Inplace... ");
        permutationHelper2( s.toCharArray(),0);


    }
}
